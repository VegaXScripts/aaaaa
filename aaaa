-- Modern Roblox UI Library
-- Clean, customizable UI system with toggles, sliders, buttons, textboxes and sections

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")

local Player = Players.LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui")

-- UI Library
local UILibrary = {}
UILibrary.__index = UILibrary

-- Theme Configuration
local Theme = {
    Background = Color3.fromRGB(25, 25, 35),
    Secondary = Color3.fromRGB(35, 35, 45),
    Accent = Color3.fromRGB(100, 150, 255),
    Text = Color3.fromRGB(255, 255, 255),
    TextSecondary = Color3.fromRGB(200, 200, 200),
    Border = Color3.fromRGB(60, 60, 70),
    Success = Color3.fromRGB(100, 255, 150),
    Warning = Color3.fromRGB(255, 200, 100),
    Error = Color3.fromRGB(255, 100, 100)
}

-- Animation Settings
local AnimationInfo = TweenInfo.new(
    0.3,
    Enum.EasingStyle.Quart,
    Enum.EasingDirection.Out
)

-- Utility Functions
local function CreateTween(object, properties)
    return TweenService:Create(object, AnimationInfo, properties)
end

local function CreateCorner(parent, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 8)
    corner.Parent = parent
    return corner
end

local function CreateStroke(parent, color, thickness)
    local stroke = Instance.new("UIStroke")
    stroke.Color = color or Theme.Border
    stroke.Thickness = thickness or 1
    stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    stroke.Parent = parent
    return stroke
end

-- Main Library Functions
function UILibrary:CreateWindow(config)
    config = config or {}
    local windowName = config.Name or "UI Library"
    local windowSize = config.Size or UDim2.new(0, 500, 0, 400)
    
    -- Main ScreenGui
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "ModernUILib"
    ScreenGui.ResetOnSpawn = false
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- Try to parent to CoreGui, fallback to PlayerGui
    local success = pcall(function()
        ScreenGui.Parent = CoreGui
    end)
    if not success then
        ScreenGui.Parent = PlayerGui
    end
    
    -- Main Frame
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = windowSize
    MainFrame.Position = UDim2.new(0.5, -windowSize.X.Offset/2, 0.5, -windowSize.Y.Offset/2)
    MainFrame.BackgroundColor3 = Theme.Background
    MainFrame.BorderSizePixel = 0
    MainFrame.Active = true
    MainFrame.Draggable = true
    MainFrame.Parent = ScreenGui
    
    CreateCorner(MainFrame, 12)
    CreateStroke(MainFrame, Theme.Border, 1)
    
    -- Title Bar
    local TitleBar = Instance.new("Frame")
    TitleBar.Name = "TitleBar"
    TitleBar.Size = UDim2.new(1, 0, 0, 40)
    TitleBar.Position = UDim2.new(0, 0, 0, 0)
    TitleBar.BackgroundColor3 = Theme.Secondary
    TitleBar.BorderSizePixel = 0
    TitleBar.Parent = MainFrame
    
    CreateCorner(TitleBar, 12)
    
    -- Title Bar Bottom
    local TitleBarBottom = Instance.new("Frame")
    TitleBarBottom.Size = UDim2.new(1, 0, 0, 12)
    TitleBarBottom.Position = UDim2.new(0, 0, 1, -12)
    TitleBarBottom.BackgroundColor3 = Theme.Secondary
    TitleBarBottom.BorderSizePixel = 0
    TitleBarBottom.Parent = TitleBar
    
    -- Title Label
    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Name = "TitleLabel"
    TitleLabel.Size = UDim2.new(1, -50, 1, 0)
    TitleLabel.Position = UDim2.new(0, 15, 0, 0)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Text = windowName
    TitleLabel.TextColor3 = Theme.Text
    TitleLabel.TextSize = 16
    TitleLabel.Font = Enum.Font.GothamBold
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    TitleLabel.Parent = TitleBar
    
    -- Close Button
    local CloseButton = Instance.new("TextButton")
    CloseButton.Name = "CloseButton"
    CloseButton.Size = UDim2.new(0, 30, 0, 30)
    CloseButton.Position = UDim2.new(1, -35, 0, 5)
    CloseButton.BackgroundColor3 = Theme.Error
    CloseButton.BorderSizePixel = 0
    CloseButton.Text = "×"
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.TextSize = 18
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.Parent = TitleBar
    
    CreateCorner(CloseButton, 6)
    
    -- Close Button Functionality
    CloseButton.MouseButton1Click:Connect(function()
        CreateTween(MainFrame, {Size = UDim2.new(0, 0, 0, 0)}):Play()
        wait(0.3)
        ScreenGui:Destroy()
    end)
    
    -- Content Frame
    local ContentFrame = Instance.new("ScrollingFrame")
    ContentFrame.Name = "ContentFrame"
    ContentFrame.Size = UDim2.new(1, -20, 1, -60)
    ContentFrame.Position = UDim2.new(0, 10, 0, 50)
    ContentFrame.BackgroundTransparency = 1
    ContentFrame.BorderSizePixel = 0
    ContentFrame.ScrollBarThickness = 6
    ContentFrame.ScrollBarImageColor3 = Theme.Accent
    ContentFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    ContentFrame.Parent = MainFrame
    
    -- Layout for Content
    local ContentLayout = Instance.new("UIListLayout")
    ContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
    ContentLayout.Padding = UDim.new(0, 8)
    ContentLayout.Parent = ContentFrame
    
    -- Update canvas size automatically
    ContentLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        ContentFrame.CanvasSize = UDim2.new(0, 0, 0, ContentLayout.AbsoluteContentSize.Y + 20)
    end)
    
    -- Window object
    local Window = {
        ScreenGui = ScreenGui,
        MainFrame = MainFrame,
        ContentFrame = ContentFrame,
        ContentLayout = ContentLayout
    }
    
    -- Add fade-in animation
    MainFrame.Size = UDim2.new(0, 0, 0, 0)
    CreateTween(MainFrame, {Size = windowSize}):Play()
    
    return setmetatable(Window, {__index = self})
end

function UILibrary:CreateSection(window, sectionName)
    local SectionFrame = Instance.new("Frame")
    SectionFrame.Name = "Section_" .. sectionName
    SectionFrame.Size = UDim2.new(1, 0, 0, 35)
    SectionFrame.BackgroundColor3 = Theme.Secondary
    SectionFrame.BorderSizePixel = 0
    SectionFrame.Parent = window.ContentFrame
    
    CreateCorner(SectionFrame, 8)
    CreateStroke(SectionFrame, Theme.Border, 1)
    
    local SectionLabel = Instance.new("TextLabel")
    SectionLabel.Size = UDim2.new(1, -20, 1, 0)
    SectionLabel.Position = UDim2.new(0, 15, 0, 0)
    SectionLabel.BackgroundTransparency = 1
    SectionLabel.Text = sectionName
    SectionLabel.TextColor3 = Theme.Text
    SectionLabel.TextSize = 14
    SectionLabel.Font = Enum.Font.GothamBold
    SectionLabel.TextXAlignment = Enum.TextXAlignment.Left
    SectionLabel.Parent = SectionFrame
    
    return SectionFrame
end

function UILibrary:CreateToggle(window, config)
    config = config or {}
    local toggleName = config.Name or "Toggle"
    local defaultValue = config.Default or false
    local callback = config.Callback or function() end
    
    local ToggleFrame = Instance.new("Frame")
    ToggleFrame.Name = "Toggle_" .. toggleName
    ToggleFrame.Size = UDim2.new(1, 0, 0, 45)
    ToggleFrame.BackgroundColor3 = Theme.Secondary
    ToggleFrame.BorderSizePixel = 0
    ToggleFrame.Parent = window.ContentFrame
    
    CreateCorner(ToggleFrame, 8)
    CreateStroke(ToggleFrame, Theme.Border, 1)
    
    local ToggleLabel = Instance.new("TextLabel")
    ToggleLabel.Size = UDim2.new(1, -70, 1, 0)
    ToggleLabel.Position = UDim2.new(0, 15, 0, 0)
    ToggleLabel.BackgroundTransparency = 1
    ToggleLabel.Text = toggleName
    ToggleLabel.TextColor3 = Theme.Text
    ToggleLabel.TextSize = 13
    ToggleLabel.Font = Enum.Font.Gotham
    ToggleLabel.TextXAlignment = Enum.TextXAlignment.Left
    ToggleLabel.Parent = ToggleFrame
    
    local ToggleButton = Instance.new("TextButton")
    ToggleButton.Size = UDim2.new(0, 45, 0, 22)
    ToggleButton.Position = UDim2.new(1, -55, 0.5, -11)
    ToggleButton.BackgroundColor3 = defaultValue and Theme.Accent or Theme.Border
    ToggleButton.BorderSizePixel = 0
    ToggleButton.Text = ""
    ToggleButton.Parent = ToggleFrame
    
    CreateCorner(ToggleButton, 11)
    
    local ToggleIndicator = Instance.new("Frame")
    ToggleIndicator.Size = UDim2.new(0, 18, 0, 18)
    ToggleIndicator.Position = defaultValue and UDim2.new(1, -20, 0.5, -9) or UDim2.new(0, 2, 0.5, -9)
    ToggleIndicator.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ToggleIndicator.BorderSizePixel = 0
    ToggleIndicator.Parent = ToggleButton
    
    CreateCorner(ToggleIndicator, 9)
    
    local isToggled = defaultValue
    
    ToggleButton.MouseButton1Click:Connect(function()
        isToggled = not isToggled
        
        CreateTween(ToggleButton, {
            BackgroundColor3 = isToggled and Theme.Accent or Theme.Border
        }):Play()
        
        CreateTween(ToggleIndicator, {
            Position = isToggled and UDim2.new(1, -20, 0.5, -9) or UDim2.new(0, 2, 0.5, -9)
        }):Play()
        
        callback(isToggled)
    end)
    
    return {Frame = ToggleFrame, SetValue = function(value)
        isToggled = value
        ToggleButton.BackgroundColor3 = isToggled and Theme.Accent or Theme.Border
        ToggleIndicator.Position = isToggled and UDim2.new(1, -20, 0.5, -9) or UDim2.new(0, 2, 0.5, -9)
    end}
end

function UILibrary:CreateSlider(window, config)
    config = config or {}
    local sliderName = config.Name or "Slider"
    local minValue = config.Min or 0
    local maxValue = config.Max or 100
    local defaultValue = config.Default or minValue
    local callback = config.Callback or function() end
    
    local SliderFrame = Instance.new("Frame")
    SliderFrame.Name = "Slider_" .. sliderName
    SliderFrame.Size = UDim2.new(1, 0, 0, 60)
    SliderFrame.BackgroundColor3 = Theme.Secondary
    SliderFrame.BorderSizePixel = 0
    SliderFrame.Parent = window.ContentFrame
    
    CreateCorner(SliderFrame, 8)
    CreateStroke(SliderFrame, Theme.Border, 1)
    
    local SliderLabel = Instance.new("TextLabel")
    SliderLabel.Size = UDim2.new(1, -15, 0, 20)
    SliderLabel.Position = UDim2.new(0, 15, 0, 8)
    SliderLabel.BackgroundTransparency = 1
    SliderLabel.Text = sliderName
    SliderLabel.TextColor3 = Theme.Text
    SliderLabel.TextSize = 13
    SliderLabel.Font = Enum.Font.Gotham
    SliderLabel.TextXAlignment = Enum.TextXAlignment.Left
    SliderLabel.Parent = SliderFrame
    
    local ValueLabel = Instance.new("TextLabel")
    ValueLabel.Size = UDim2.new(0, 50, 0, 20)
    ValueLabel.Position = UDim2.new(1, -65, 0, 8)
    ValueLabel.BackgroundTransparency = 1
    ValueLabel.Text = tostring(defaultValue)
    ValueLabel.TextColor3 = Theme.Accent
    ValueLabel.TextSize = 12
    ValueLabel.Font = Enum.Font.GothamBold
    ValueLabel.TextXAlignment = Enum.TextXAlignment.Right
    ValueLabel.Parent = SliderFrame
    
    local SliderBackground = Instance.new("Frame")
    SliderBackground.Size = UDim2.new(1, -30, 0, 6)
    SliderBackground.Position = UDim2.new(0, 15, 1, -20)
    SliderBackground.BackgroundColor3 = Theme.Border
    SliderBackground.BorderSizePixel = 0
    SliderBackground.Parent = SliderFrame
    
    CreateCorner(SliderBackground, 3)
    
    local SliderFill = Instance.new("Frame")
    SliderFill.Size = UDim2.new((defaultValue - minValue) / (maxValue - minValue), 0, 1, 0)
    SliderFill.Position = UDim2.new(0, 0, 0, 0)
    SliderFill.BackgroundColor3 = Theme.Accent
    SliderFill.BorderSizePixel = 0
    SliderFill.Parent = SliderBackground
    
    CreateCorner(SliderFill, 3)
    
    local SliderButton = Instance.new("TextButton")
    SliderButton.Size = UDim2.new(1, 0, 1, 0)
    SliderButton.Position = UDim2.new(0, 0, 0, 0)
    SliderButton.BackgroundTransparency = 1
    SliderButton.Text = ""
    SliderButton.Parent = SliderBackground
    
    local currentValue = defaultValue
    local dragging = false
    
    SliderButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)
    
    SliderButton.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local mouse = UserInputService:GetMouseLocation()
            local relativePos = math.clamp((mouse.X - SliderBackground.AbsolutePosition.X) / SliderBackground.AbsoluteSize.X, 0, 1)
            currentValue = math.floor(minValue + (maxValue - minValue) * relativePos)
            
            ValueLabel.Text = tostring(currentValue)
            CreateTween(SliderFill, {Size = UDim2.new(relativePos, 0, 1, 0)}):Play()
            
            callback(currentValue)
        end
    end)
    
    return {Frame = SliderFrame, SetValue = function(value)
        currentValue = math.clamp(value, minValue, maxValue)
        local relativePos = (currentValue - minValue) / (maxValue - minValue)
        ValueLabel.Text = tostring(currentValue)
        SliderFill.Size = UDim2.new(relativePos, 0, 1, 0)
    end}
end

function UILibrary:CreateButton(window, config)
    config = config or {}
    local buttonName = config.Name or "Button"
    local callback = config.Callback or function() end
    
    local ButtonFrame = Instance.new("TextButton")
    ButtonFrame.Name = "Button_" .. buttonName
    ButtonFrame.Size = UDim2.new(1, 0, 0, 40)
    ButtonFrame.BackgroundColor3 = Theme.Accent
    ButtonFrame.BorderSizePixel = 0
    ButtonFrame.Text = buttonName
    ButtonFrame.TextColor3 = Color3.fromRGB(255, 255, 255)
    ButtonFrame.TextSize = 14
    ButtonFrame.Font = Enum.Font.GothamBold
    ButtonFrame.Parent = window.ContentFrame
    
    CreateCorner(ButtonFrame, 8)
    
    ButtonFrame.MouseEnter:Connect(function()
        CreateTween(ButtonFrame, {BackgroundColor3 = Color3.fromRGB(
            Theme.Accent.R + 0.1,
            Theme.Accent.G + 0.1,
            Theme.Accent.B + 0.1
        )}):Play()
    end)
    
    ButtonFrame.MouseLeave:Connect(function()
        CreateTween(ButtonFrame, {BackgroundColor3 = Theme.Accent}):Play()
    end)
    
    ButtonFrame.MouseButton1Click:Connect(function()
        CreateTween(ButtonFrame, {Size = UDim2.new(1, -4, 0, 36)}):Play()
        wait(0.1)
        CreateTween(ButtonFrame, {Size = UDim2.new(1, 0, 0, 40)}):Play()
        callback()
    end)
    
    return ButtonFrame
end

function UILibrary:CreateTextbox(window, config)
    config = config or {}
    local textboxName = config.Name or "Textbox"
    local placeholder = config.Placeholder or "Enter text..."
    local callback = config.Callback or function() end
    
    local TextboxFrame = Instance.new("Frame")
    TextboxFrame.Name = "Textbox_" .. textboxName
    TextboxFrame.Size = UDim2.new(1, 0, 0, 60)
    TextboxFrame.BackgroundColor3 = Theme.Secondary
    TextboxFrame.BorderSizePixel = 0
    TextboxFrame.Parent = window.ContentFrame
    
    CreateCorner(TextboxFrame, 8)
    CreateStroke(TextboxFrame, Theme.Border, 1)
    
    local TextboxLabel = Instance.new("TextLabel")
    TextboxLabel.Size = UDim2.new(1, -15, 0, 20)
    TextboxLabel.Position = UDim2.new(0, 15, 0, 8)
    TextboxLabel.BackgroundTransparency = 1
    TextboxLabel.Text = textboxName
    TextboxLabel.TextColor3 = Theme.Text
    TextboxLabel.TextSize = 13
    TextboxLabel.Font = Enum.Font.Gotham
    TextboxLabel.TextXAlignment = Enum.TextXAlignment.Left
    TextboxLabel.Parent = TextboxFrame
    
    local TextBox = Instance.new("TextBox")
    TextBox.Size = UDim2.new(1, -30, 0, 25)
    TextBox.Position = UDim2.new(0, 15, 1, -30)
    TextBox.BackgroundColor3 = Theme.Background
    TextBox.BorderSizePixel = 0
    TextBox.Text = ""
    TextBox.PlaceholderText = placeholder
    TextBox.TextColor3 = Theme.Text
    TextBox.PlaceholderColor3 = Theme.TextSecondary
    TextBox.TextSize = 12
    TextBox.Font = Enum.Font.Gotham
    TextBox.TextXAlignment = Enum.TextXAlignment.Left
    TextBox.ClearButtonOnFocus = false
    TextBox.Parent = TextboxFrame
    
    CreateCorner(TextBox, 6)
    CreateStroke(TextBox, Theme.Border, 1)
    
    TextBox.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            callback(TextBox.Text)
        end
    end)
    
    return {Frame = TextboxFrame, GetText = function() return TextBox.Text end, SetText = function(text) TextBox.Text = text end}
end

-- Example Usage Function
function UILibrary:CreateExample()
    local Window = self:CreateWindow({
        Name = "Modern UI Library",
        Size = UDim2.new(0, 450, 0, 500)
    })
    
    self:CreateSection(Window, "🎮 Main Controls")
    
    self:CreateToggle(Window, {
        Name = "Enable Feature",
        Default = false,
        Callback = function(value)
            print("Toggle:", value)
        end
    })
    
    self:CreateSlider(Window, {
        Name = "Speed Multiplier",
        Min = 1,
        Max = 10,
        Default = 5,
        Callback = function(value)
            print("Slider:", value)
        end
    })
    
    self:CreateButton(Window, {
        Name = "Execute Action",
        Callback = function()
            print("Button clicked!")
        end
    })
    
    self:CreateTextbox(Window, {
        Name = "Player Name",
        Placeholder = "Enter player name...",
        Callback = function(text)
            print("Textbox:", text)
        end
    })
    
    self:CreateSection(Window, "⚙️ Settings")
    
    self:CreateToggle(Window, {
        Name = "Auto-Save",
        Default = true,
        Callback = function(value)
            print("Auto-Save:", value)
        end
    })
    
    return Window
end

-- Initialize and return the library
return UILibrary
